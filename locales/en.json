{
  "navbar.home": "Home",
  "navbar.about": "About Me",
  "navbar.history": "My Journey", 
  "navbar.projects": "My Work",
  "navbar.contact": "Contact",
  "navbar.menu": "Menu",
  
  "hero.tags": "QA automation | Backend | DevOps",
  "hero.tagline": "Building robust systems one commit at a time",
  "hero.downloadCV": "Download CV",
  
  "about.description": "Backend developer and senior Information Systems Engineering student at UTN FRC. I have hands-on experience building microservices with Java and Spring Boot, QA automation, Docker-based deployments, and modern DevOps practices in cloud environments (AWS, Terraform). I contribute as a teaching assistant in Operating Systems and specialize in integrating security (DevSecOps, Keycloak, Spring Security) and automation within CI/CD pipelines. Currently, I actively participate in cybersecurity challenges and explore the use of AI to automate processes and enhance real-world user experience.",
  "about.commands.whoami.desc": "üë§ Who am I?",
  "about.commands.motd.desc": "üìñ About Me",
  "about.commands.processes.desc": "üî• My Passions", 
  "about.commands.skills.desc": "üõ†Ô∏è Technical Skills",
  "about.commands.available": "Available commands - Click to execute/hide:",
  "about.terminal.placeholder": "Type secret commands... (try 'help')",
  "about.terminal.unlock": "üí° Click here to unlock secret terminal...",
  
  "history.description": "I am currently available and actively seeking new professional challenges where I can apply my skills, continue growing, and contribute real value through the development of robust and secure software.",
  
  "timeline.utn.title": "UTN FRC ‚Äì Operating Systems Teaching Assistant",
  "timeline.utn.description": "Teaching Assistant in Operating Systems (2024‚ÄìPresent)",
  "timeline.utn.summary": "Prepared and delivered theoretical and lab classes, graded exams, and provided technical and conceptual support to students. Full course responsibility since 2025.",
  "timeline.qatitle": "TestingDeSoftwareArg ‚Äì QA Automation",
  "timeline.qadescription": "QA Automation, TestingDeSoftwareArg (Jan 2024‚ÄìNov 2024)",
  "timeline.qasummary": "Designed and executed automated tests using Selenium (Python/Java), Locust, TDD, and REST API validation. Integrated testing in CI pipelines.",
  "timeline.logistics.title": "Logistics Project ‚Äì Backend Developer (Freelance)",
  "timeline.logistics.description": "Backend Developer, Freelance Project (Nov 2023‚ÄìJan 2024)",
  "timeline.logistics.summary": "Developed RESTful APIs with Java/Spring Boot, implemented microservice architectures, Docker integration, API Gateway management, and security with Keycloak/Spring Security.",
  "timeline.isidoro.title": "Isidoro S.A. ‚Äì Institutional Website (Freelance)",
  "timeline.isidoro.description": "Freelance Developer (Mar 2025)",
  "timeline.isidoro.summary": "Professional landing page for agricultural company with John Deere aesthetics, contact forms, automated deployment with Docker and GitHub Actions.",
  "timeline.barberia.title": "Barberia FadeRoom ‚Äì Booking System (Freelance)",
  "timeline.barberia.description": "Backend Freelance Developer (Jun 2025‚ÄìJul 2025)",
  "timeline.barberia.summary": "Complete booking system for barbershop with Spring Boot, JWT authentication, appointment management, admin panel and Redis cache integration.",
  "timeline.soon.year": "2025",
  "timeline.soon.title": "Coming soon‚Ä¶",
  "timeline.soon.description": "Preparing for new professional challenges.",
  "timeline.soon.summary": "Stay tuned for upcoming projects and opportunities.",
  
  "projects.filter.all": "All",
  "projects.filter.backend": "Backend",
  "projects.filter.frontend": "Frontend",
  "projects.filter.devops": "DevOps", 
  "projects.filter.security": "Security",
  "projects.shopup.title": "ShopUp - E-commerce Platform with Microservices",
  "projects.shopup.description": "Comprehensive e-commerce platform with microservices architecture, AI-powered features, and role-based authentication for small and medium-sized businesses.",
  "projects.shopup.timeline": "August 2024 - Present (Sprint 8/‚àû - In active development)",
  "projects.shopup.team": "Final ISI Project - 4 developers team",
  
  "projects.shopup.highlights.1": "Microservices architecture with Spring Cloud Gateway",
  "projects.shopup.highlights.2": "AI-powered features: voice upload, semantic search, embeddings",
  "projects.shopup.highlights.3": "Role-based authentication with Keycloak (emprendedor, comprador, admin)",
  "projects.shopup.highlights.4": "Resource-level authorization with JWT UUID matching",
  "projects.shopup.highlights.5": "Hexagonal architecture with clean separation of concerns",
  "projects.shopup.highlights.6": "Event-driven updates for search indexing",
  "projects.shopup.highlights.7": "Real-time audio processing with Whisper API",
  "projects.shopup.highlights.8": "Complete payment integration with MercadoPago",
  "projects.shopup.highlights.9": "Shopping cart and order management system",
  "projects.shopup.highlights.10": "Business geolocation with Google Maps integration",
  
  "projects.shopup.overview.problemStatement": "Small and medium-sized businesses need a comprehensive platform to manage product catalogs, increase visibility, handle sales, and build customer trust through ratings and reviews, with AI assistance for enhanced user experience.",
  "projects.shopup.overview.solution": "Microservices-based e-commerce platform with AI-powered features including voice upload processing, semantic search with embeddings, role-based authentication system, and real-time payment integration through MercadoPago API.",
  "projects.shopup.overview.impact": "Complete marketplace solution enabling entrepreneurs to manage their businesses efficiently while providing buyers with advanced search capabilities and seamless shopping experience with AI-enhanced product discovery.",
  
  "projects.shopup.architecture.description": "Distributed microservices architecture with centralized API Gateway, specialized services, and dedicated databases. Implements Domain-Driven Design patterns and hexagonal architecture for maintainability and scalability.",
  
  "projects.shopup.microservices.gateway.name": "API Gateway (Spring Cloud Gateway)",
  "projects.shopup.microservices.gateway.description": "Single entry point for all client requests with OAuth2 authentication, JWT validation, and role-based routing to appropriate microservices",
  "projects.shopup.microservices.gateway.responsibilities.1": "Route requests to Core service (port 8081) and AI service (port 8082)",
  "projects.shopup.microservices.gateway.responsibilities.2": "JWT token validation with Keycloak integration (port 8083)",
  "projects.shopup.microservices.gateway.responsibilities.3": "Role-based access control (emprendedor, comprador, admin)",
  "projects.shopup.microservices.gateway.responsibilities.4": "Resource-level authorization with UUID matching",
  "projects.shopup.microservices.gateway.responsibilities.5": "Rate limiting, CORS configuration, and centralized logging",
  "projects.shopup.microservices.gateway.endpoints.1": "/api/emprendedor/v1/** ‚Üí Core Service (entrepreneur role)",
  "projects.shopup.microservices.gateway.endpoints.2": "/api/comprador/v1/** ‚Üí Core Service (buyer role)",
  "projects.shopup.microservices.gateway.endpoints.3": "/api/admin/v1/** ‚Üí Core Service (admin role)",
  "projects.shopup.microservices.gateway.endpoints.4": "/api/v1/public/** ‚Üí Core Service (public access)",
  
  "projects.shopup.microservices.core.name": "Core Service (Main Microservice)",
  "projects.shopup.microservices.core.description": "Main service with hexagonal architecture for business and product management",
  "projects.shopup.microservices.core.database": "PostgreSQL with normalized tables and triggers for embeddings",
  "projects.shopup.microservices.core.responsibilities.1": "Complete CRUD for businesses (User Stories Sprint 1)",
  "projects.shopup.microservices.core.responsibilities.2": "Product management with dynamic attributes",
  "projects.shopup.microservices.core.responsibilities.3": "OpenSearch integration for embeddings",
  "projects.shopup.microservices.core.responsibilities.4": "Complete shopping cart and order management system",
  "projects.shopup.microservices.core.responsibilities.5": "MercadoPago integration for payment processing",
  "projects.shopup.microservices.core.responsibilities.6": "Sales consultation system for buyers and entrepreneurs",
  "projects.shopup.microservices.core.responsibilities.7": "Business validations (DNI, emails, phones)",
  "projects.shopup.microservices.core.responsibilities.8": "State management (State Pattern): Approved, Pending, Suspended, Deleted",
  "projects.shopup.microservices.core.responsibilities.9": "Seeders for initial data (provinces, categories, types)",
  
  "projects.shopup.microservices.ai.name": "AI Service (AI Microservice)",
  "projects.shopup.microservices.ai.description": "Python service specialized in audio processing, embeddings and semantic search",
  "projects.shopup.microservices.ai.responsibilities.1": "Audio to text transcription with Whisper",
  "projects.shopup.microservices.ai.responsibilities.2": "Product embeddings generation",
  "projects.shopup.microservices.ai.responsibilities.3": "Vector semantic search",
  "projects.shopup.microservices.ai.responsibilities.4": "Core Service integration for synchronization",
  "projects.shopup.microservices.ai.responsibilities.5": "Natural language processing",
  
  "projects.shopup.integrations.1": "Keycloak for identity and access management with JWT tokens",
  "projects.shopup.integrations.2": "PostgreSQL as primary database for Core service",
  "projects.shopup.integrations.3": "OpenSearch for product search and embeddings storage",
  "projects.shopup.integrations.4": "OpenAI API for AI features and voice processing",
  "projects.shopup.integrations.5": "MercadoPago API for payment processing with webhook handling",
  "projects.shopup.integrations.6": "Google Maps API for business geolocation and discovery",
  "projects.shopup.integrations.7": "Docker and Docker Compose for containerization",
  "projects.shopup.integrations.8": "Nginx for static asset serving in production",
  
  "projects.shopup.challenges.gateway.jwtFilters.title": "Custom JWT Filters with UUID Matching",
  "projects.shopup.challenges.gateway.jwtFilters.problem": "Need to validate that users only access resources that belong to them using UUIDs in path and query params",
  "projects.shopup.challenges.gateway.jwtFilters.solution": "Implemented GenericJwtIdMatchFilter with configurable regex patterns to extract UUIDs and compare them with JWT claims",
  "projects.shopup.challenges.gateway.jwtFilters.impact": "Granular resource security without duplicating logic in each microservice",
  "projects.shopup.challenges.gateway.jwtFilters.techDetails.1": "Regex patterns to extract UUIDs from paths: /emprendimientos/{uuid}",
  "projects.shopup.challenges.gateway.jwtFilters.techDetails.2": "Query param matching for /productos?idEmprendimiento={uuid}",
  "projects.shopup.challenges.gateway.jwtFilters.techDetails.3": "Automatic comparison with JWT claim \"sub\"",
  "projects.shopup.challenges.gateway.jwtFilters.techDetails.4": "Declarative configuration in application.properties",
  
  "projects.shopup.challenges.core.hexagonal.title": "Pure Hexagonal Architecture",
  "projects.shopup.challenges.core.hexagonal.problem": "Implement Clean Architecture without dependencies between layers and maintain testability",
  "projects.shopup.challenges.core.hexagonal.solution": "Strict separation in Application/Domain/Infrastructure with repository interfaces and automatic mappers",
  "projects.shopup.challenges.core.hexagonal.impact": "Testable, maintainable code decoupled from frameworks",
  "projects.shopup.challenges.core.hexagonal.techDetails.1": "Application: Controllers, DTOs (Request/Response), Exception Handlers",
  "projects.shopup.challenges.core.hexagonal.techDetails.2": "Domain: Pure Models, Services with business logic, Repository interfaces",
  "projects.shopup.challenges.core.hexagonal.techDetails.3": "Infrastructure: JPA Entities, DAOs, Repository adapters, Configuration",
  
  "projects.shopup.challenges.core.statePattern.title": "State Pattern for Business States",
  "projects.shopup.challenges.core.statePattern.problem": "Model complex state transitions (Pending ‚Üí Approved ‚Üí Suspended ‚Üí Deleted)",
  "projects.shopup.challenges.core.statePattern.solution": "Implemented State Pattern with concrete State classes and transition validations",
  "projects.shopup.challenges.core.statePattern.impact": "Centralized and extensible state logic",
  "projects.shopup.challenges.core.statePattern.techDetails.1": "Abstract Estado class with cambiarA() method",
  "projects.shopup.challenges.core.statePattern.techDetails.2": "EstadoAprobado, EstadoPendiente, EstadoSuspendido, EstadoEliminado",
  "projects.shopup.challenges.core.statePattern.techDetails.3": "Allowed transition validations",
  "projects.shopup.challenges.core.statePattern.techDetails.4": "Change audit with CambioEstado entity",
  
  "projects.shopup.challenges.ai.audioProcessing.title": "Real-time Audio-to-Text Integration",
  "projects.shopup.challenges.ai.audioProcessing.problem": "Process user audio for voice searches with low latency",
  "projects.shopup.challenges.ai.audioProcessing.solution": "Optimized Whisper pipeline and cache for frequent transcriptions",
  "projects.shopup.challenges.ai.audioProcessing.impact": "Voice searches with latency < 3 seconds",
  "projects.shopup.challenges.ai.audioProcessing.techDetails.1": "Optimized Whisper model size for Spanish",
  "projects.shopup.challenges.ai.audioProcessing.techDetails.2": "Audio preprocessing for better quality",
  "projects.shopup.challenges.ai.audioProcessing.techDetails.3": "Cache for common transcriptions",
  "projects.shopup.challenges.ai.audioProcessing.techDetails.4": "Audio format validation at input",
  
  "projects.shopup.challenges.main.rbac.title": "Role-Based Access Control with Resource Ownership",
  "projects.shopup.challenges.main.rbac.problem": "Implementing granular authorization where users can only access resources they own, while maintaining clean separation between authentication and business logic",
  "projects.shopup.challenges.main.rbac.solution": "Custom JWT filters in Gateway that validate resource ownership by comparing UUIDs in requests with JWT claims, combined with role-based routing",
  "projects.shopup.challenges.main.rbac.impact": "Secure multi-tenant architecture with zero business logic duplication across microservices",
  "projects.shopup.challenges.main.rbac.techDetails.1": "GenericJwtIdMatchFilter with configurable regex patterns for UUID extraction",
  "projects.shopup.challenges.main.rbac.techDetails.2": "Resource ownership validation at Gateway level using JWT \"sub\" claim",
  "projects.shopup.challenges.main.rbac.techDetails.3": "Role-based endpoint routing (/api/emprendedor, /api/comprador, /api/admin)",
  "projects.shopup.challenges.main.rbac.techDetails.4": "Query parameter and path parameter UUID matching",
  "projects.shopup.challenges.main.rbac.techDetails.5": "Automatic rejection of unauthorized resource access attempts",
  "projects.shopup.challenges.main.rbac.learnings.1": "Security concerns should be handled at the Gateway level when possible",
  "projects.shopup.challenges.main.rbac.learnings.2": "Regex-based UUID extraction provides flexibility for different endpoint patterns",
  "projects.shopup.challenges.main.rbac.learnings.3": "Centralized authorization reduces complexity in downstream services",
  "projects.shopup.challenges.main.rbac.learnings.4": "JWT claims structure directly impacts authorization design",
  
  "projects.shopup.challenges.main.aiVoice.title": "AI-Powered Voice-to-Product Management",
  "projects.shopup.challenges.main.aiVoice.problem": "Enable entrepreneurs to create and modify product listings using voice commands, requiring accurate data extraction from natural language and handling of ambiguous inputs",
  "projects.shopup.challenges.main.aiVoice.solution": "Complete AI pipeline using Whisper for speech-to-text transcription, OpenAI for semantic analysis and structured data extraction, with vector embeddings for product matching",
  "projects.shopup.challenges.main.aiVoice.impact": "Revolutionary UX enabling hands-free inventory management and reducing data entry friction for business owners",
  "projects.shopup.challenges.main.aiVoice.techDetails.1": "Whisper API integration for Spanish speech-to-text conversion",
  "projects.shopup.challenges.main.aiVoice.techDetails.2": "GPT-based structured data extraction to JSON format",
  "projects.shopup.challenges.main.aiVoice.techDetails.3": "Vector embedding similarity matching for existing product identification",
  "projects.shopup.challenges.main.aiVoice.techDetails.4": "Two-phase validation: AI processing + human confirmation",
  "projects.shopup.challenges.main.aiVoice.techDetails.5": "Support for multiple product entries in single audio input",
  "projects.shopup.challenges.main.aiVoice.techDetails.6": "Noise handling and transcription ambiguity resolution",
  "projects.shopup.challenges.main.aiVoice.learnings.1": "AI should augment, not replace human decision-making in business processes",
  "projects.shopup.challenges.main.aiVoice.learnings.2": "Semantic similarity is crucial for identifying existing products vs new ones",
  "projects.shopup.challenges.main.aiVoice.learnings.3": "Error handling in voice interfaces requires careful UX design",
  "projects.shopup.challenges.main.aiVoice.learnings.4": "Real-time feedback improves user confidence in AI-assisted workflows",
  
  "projects.shopup.challenges.main.keycloak.title": "Enterprise Authentication with Keycloak",
  "projects.shopup.challenges.main.keycloak.problem": "Configure production-ready OAuth2 authentication with Keycloak in containerized environment, supporting multiple clients and role-based access",
  "projects.shopup.challenges.main.keycloak.solution": "Custom Keycloak realm setup with role-based clients, JWT integration, and development-to-production configuration management",
  "projects.shopup.challenges.main.keycloak.impact": "Enterprise-grade authentication system with SSO capabilities, refresh tokens, and fine-grained access control",
  "projects.shopup.challenges.main.keycloak.techDetails.1": "Keycloak realm \"shopup\" with three distinct user roles (emprendedor, comprador, admin)",
  "projects.shopup.challenges.main.keycloak.techDetails.2": "Multiple client configurations for Gateway and frontend applications",
  "projects.shopup.challenges.main.keycloak.techDetails.3": "JWT claims structure with user UUID in \"sub\" field for resource ownership",
  "projects.shopup.challenges.main.keycloak.techDetails.4": "CORS configuration for cross-origin development environment",
  "projects.shopup.challenges.main.keycloak.techDetails.5": "Docker Compose integration with persistent volume configuration",
  
  "projects.shopup.challenges.main.googleOauth.title": "Google OAuth Integration with Keycloak",
  "projects.shopup.challenges.main.googleOauth.problem": "Allow Google login while maintaining existing security architecture",
  "projects.shopup.challenges.main.googleOauth.solution": "Identity Provider configuration in Keycloak with claims mapping and refresh tokens",
  "projects.shopup.challenges.main.googleOauth.impact": "Simplified onboarding for end users",
  "projects.shopup.challenges.main.googleOauth.techDetails.1": "Google OAuth 2.0 as Identity Provider",
  "projects.shopup.challenges.main.googleOauth.techDetails.2": "Automatic claims mapping from Google to Keycloak",
  "projects.shopup.challenges.main.googleOauth.techDetails.3": "Refresh tokens for extended sessions",
  "projects.shopup.challenges.main.googleOauth.techDetails.4": "Profile data synchronization",
  
  "projects.shopup.challenges.main.embeddings.title": "Embeddings Synchronization with Triggers",
  "projects.shopup.challenges.main.embeddings.problem": "Keep OpenSearch embeddings synchronized when products are updated in PostgreSQL",
  "projects.shopup.challenges.main.embeddings.solution": "PostgreSQL triggers that insert into pending table, processed asynchronously by Python service",
  "projects.shopup.challenges.main.embeddings.impact": "Eventual consistency between PostgreSQL and OpenSearch without performance impact",
  "projects.shopup.challenges.main.embeddings.techDetails.1": "AFTER INSERT/UPDATE trigger on products table",
  "projects.shopup.challenges.main.embeddings.techDetails.2": "embeddings_pending table as queue",
  "projects.shopup.challenges.main.embeddings.techDetails.3": "Python service that processes queue periodically",
  "projects.shopup.challenges.main.embeddings.techDetails.4": "Retry logic for OpenAI API failures",
  
  "projects.shopup.challenges.main.mercadopago.title": "MercadoPago Payment Integration & Sales Automation",
  "projects.shopup.challenges.main.mercadopago.problem": "Implement secure, reliable payment processing with automatic sales registration and comprehensive order management for a multi-vendor marketplace",
  "projects.shopup.challenges.main.mercadopago.solution": "Complete MercadoPago API integration with webhook handling, automatic sales recording, and comprehensive payment flow management across all user roles",
  "projects.shopup.challenges.main.mercadopago.impact": "Full e-commerce capability enabling secure transactions, automated sales tracking, and streamlined revenue management for entrepreneurs",
  "projects.shopup.challenges.main.mercadopago.techDetails.1": "MercadoPago API integration with preference creation and payment processing",
  "projects.shopup.challenges.main.mercadopago.techDetails.2": "Webhook implementation for real-time payment status updates",
  "projects.shopup.challenges.main.mercadopago.techDetails.3": "Automatic sales registration upon successful payment completion",
  "projects.shopup.challenges.main.mercadopago.techDetails.4": "Order management system linking buyers, entrepreneurs, and products",
  "projects.shopup.challenges.main.mercadopago.techDetails.5": "Payment status tracking and reconciliation with business analytics",
  "projects.shopup.challenges.main.mercadopago.techDetails.6": "Multi-vendor commission handling and revenue distribution",
  "projects.shopup.challenges.main.mercadopago.learnings.1": "Payment webhook reliability requires robust error handling and retry logic",
  "projects.shopup.challenges.main.mercadopago.learnings.2": "Sales automation must maintain data consistency across multiple entities",
  "projects.shopup.challenges.main.mercadopago.learnings.3": "Payment gateway integration impacts entire application architecture",
  "projects.shopup.challenges.main.mercadopago.learnings.4": "Financial transaction logging is crucial for audit trails and reconciliation",
  
  "projects.shopup.challenges.main.googleMaps.title": "Google Maps Integration for Business Geolocation",
  "projects.shopup.challenges.main.googleMaps.problem": "Enable location-based business discovery and provide intuitive geographic visualization of entrepreneur stores for enhanced buyer experience",
  "projects.shopup.challenges.main.googleMaps.solution": "Custom Google Maps implementation with business location services, search functionality, and geospatial query optimization for location-aware commerce",
  "projects.shopup.challenges.main.googleMaps.impact": "Enhanced buyer experience with location-based business discovery, driving local commerce and improving entrepreneur visibility",
  "projects.shopup.challenges.main.googleMaps.techDetails.1": "Google Maps API integration with custom markers and business information",
  "projects.shopup.challenges.main.googleMaps.techDetails.2": "Geolocation services for automatic user location detection",
  "projects.shopup.challenges.main.googleMaps.techDetails.3": "Location-based business search with radius filtering",
  "projects.shopup.challenges.main.googleMaps.techDetails.4": "Custom map components for entrepreneur store visualization",
  "projects.shopup.challenges.main.googleMaps.techDetails.5": "Address geocoding and reverse geocoding for accurate positioning",
  "projects.shopup.challenges.main.googleMaps.techDetails.6": "Mobile-responsive map interface with touch and gesture support",
  "projects.shopup.challenges.main.googleMaps.learnings.1": "Geolocation features require careful privacy consideration and user consent",
  "projects.shopup.challenges.main.googleMaps.learnings.2": "Map performance optimization is crucial for mobile user experience",
  "projects.shopup.challenges.main.googleMaps.learnings.3": "Location data accuracy directly impacts business discoverability",
  "projects.shopup.challenges.main.googleMaps.learnings.4": "Custom map styling enhances brand consistency and user engagement",
  
  "projects.shopup.codeSnippets.gatewayJwtConfig.title": "JWT Filter Configuration in Gateway",
  "projects.shopup.codeSnippets.gatewayJwtConfig.explanation": "Filter configuration that allows granular authorization by comparing path/query UUIDs with JWT claims",
  "projects.shopup.codeSnippets.hexagonalController.title": "Controller Structure with Hexagonal Architecture",
  "projects.shopup.codeSnippets.hexagonalController.explanation": "Controller that acts as an adapter between HTTP and domain, using DTOs and delegating logic to service",
  
  "projects.shopup.metrics.performance.responseTime": "< 500ms for basic CRUD operations, < 3s for AI voice processing",
  "projects.shopup.metrics.performance.throughput": "Development environment - production metrics pending deployment",
  "projects.shopup.metrics.performance.uptime": "Docker Compose stack demonstrates 99.9% local development stability",
  "projects.shopup.metrics.business.usersImpacted": "Academic project with comprehensive demo capabilities",
  "projects.shopup.metrics.business.conversionImprovement": "AI-assisted product creation reduces entry time by ~60%",
  "projects.shopup.metrics.business.costReduction": "Microservices architecture enables selective scaling and cost optimization",
  
  "projects.shopup.sprints.description": "Development progress organized in agile sprints with specific user stories and deliverables",
  "projects.shopup.sprints.1.title": "Sprint 1 - Foundation & Authentication",
  "projects.shopup.sprints.1.duration": "2 weeks",
  "projects.shopup.sprints.1.description": "Basic project setup, authentication system, and core infrastructure",
  "projects.shopup.sprints.1.achievements.1": "Microservices architecture setup with Docker Compose",
  "projects.shopup.sprints.1.achievements.2": "Keycloak integration for OAuth2 authentication",
  "projects.shopup.sprints.1.achievements.3": "API Gateway with role-based routing",
  "projects.shopup.sprints.1.achievements.4": "Basic entrepreneur registration and management",
  "projects.shopup.sprints.1.userStories.1": "US-001: System architecture design",
  "projects.shopup.sprints.1.userStories.2": "US-002: Authentication setup with Keycloak",
  "projects.shopup.sprints.1.userStories.3": "US-003: API Gateway implementation",
  "projects.shopup.sprints.1.userStories.4": "US-004: Basic entrepreneur CRUD operations",
  
  "projects.shopup.sprints.2.title": "Sprint 2 - Core Business Logic",
  "projects.shopup.sprints.2.duration": "2 weeks",
  "projects.shopup.sprints.2.description": "Entrepreneur management with hexagonal architecture and state patterns",
  "projects.shopup.sprints.2.achievements.1": "Complete entrepreneur lifecycle management",
  "projects.shopup.sprints.2.achievements.2": "State pattern implementation for business status",
  "projects.shopup.sprints.2.achievements.3": "Hexagonal architecture with clean separation",
  "projects.shopup.sprints.2.achievements.4": "PostgreSQL database design and optimization",
  "projects.shopup.sprints.2.userStories.1": "PF-100: Advanced entrepreneur management",
  "projects.shopup.sprints.2.userStories.2": "PF-101: Business approval workflow",
  "projects.shopup.sprints.2.userStories.3": "PF-102: State transitions and validations",
  "projects.shopup.sprints.2.userStories.4": "PF-103: Data persistence optimization",
  "projects.shopup.sprints.3.title": "Sprint 3 - AI Integration & Voice Features",
  "projects.shopup.sprints.3.duration": "3 weeks",
  "projects.shopup.sprints.3.description": "AI service implementation with voice processing and semantic search",
  "projects.shopup.sprints.3.achievements.1": "Python FastAPI AI service development",
  "projects.shopup.sprints.3.achievements.2": "Whisper integration for speech-to-text",
  "projects.shopup.sprints.3.achievements.3": "OpenAI embeddings for semantic product search",
  "projects.shopup.sprints.3.achievements.4": "Voice-to-product creation workflow",
  "projects.shopup.sprints.3.userStories.1": "PF-150: AI service architecture",
  "projects.shopup.sprints.3.userStories.2": "PF-151: Voice upload processing",
  "projects.shopup.sprints.3.userStories.3": "PF-152: Product embeddings generation",
  "projects.shopup.sprints.3.userStories.4": "PF-153: Semantic search implementation",
  "projects.shopup.sprints.4.title": "Sprint 4 - Product Management",
  "projects.shopup.sprints.4.duration": "2 weeks",
  "projects.shopup.sprints.4.description": "Complete product management system with AI-enhanced features",
  "projects.shopup.sprints.4.achievements.1": "Full product CRUD operations",
  "projects.shopup.sprints.4.achievements.2": "AI-assisted product creation via voice",
  "projects.shopup.sprints.4.achievements.3": "Dynamic product attributes system",
  "projects.shopup.sprints.4.achievements.4": "OpenSearch integration for fast queries",
  "projects.shopup.sprints.4.userStories.1": "PF-180: Product management system",
  "projects.shopup.sprints.4.userStories.2": "PF-181: Voice-powered product creation",
  "projects.shopup.sprints.4.userStories.3": "PF-182: Dynamic attributes handling",
  "projects.shopup.sprints.4.userStories.4": "PF-183: Search optimization",
  
  "projects.shopup.sprints.5.title": "Sprint 5 - Catalog Management & Voice Enhancement",
  "projects.shopup.sprints.5.duration": "2 weeks",
  "projects.shopup.sprints.5.description": "Advanced catalog management with enhanced voice-to-text capabilities for comprehensive product operations",
  "projects.shopup.sprints.5.achievements.1": "Complete catalog CRUD operations with categorization",
  "projects.shopup.sprints.5.achievements.2": "Enhanced voice features for product registration and modification",
  "projects.shopup.sprints.5.achievements.3": "Audio-to-text processing for bulk product management",
  "projects.shopup.sprints.5.achievements.4": "Voice command system for product lifecycle management",
  "projects.shopup.sprints.5.userStories.1": "Registration, consultation, modification, and elimination of product catalogs",
  "projects.shopup.sprints.5.userStories.2": "Voice Stories: Product registration via audio input",
  "projects.shopup.sprints.5.userStories.3": "Voice Stories: Product modification through voice commands",
  "projects.shopup.sprints.5.userStories.4": "Catalog organization and management system",
  
  "projects.shopup.sprints.6.title": "Sprint 6 - Shopping Cart & Buyer Experience",
  "projects.shopup.sprints.6.duration": "3 weeks",
  "projects.shopup.sprints.6.description": "Complete shopping cart functionality and enhanced buyer user experience with product discovery",
  "projects.shopup.sprints.6.achievements.1": "Full shopping cart implementation with quantity management",
  "projects.shopup.sprints.6.achievements.2": "Product catalog browsing with advanced filters",
  "projects.shopup.sprints.6.achievements.3": "Detailed product views for informed purchasing decisions",
  "projects.shopup.sprints.6.achievements.4": "Order summary with tax calculations and totals",
  "projects.shopup.sprints.6.userStories.1": "PF-220: View products in cart with complete details and pricing",
  "projects.shopup.sprints.6.userStories.2": "PF-221: Add products to cart with quantities and variant selection",
  "projects.shopup.sprints.6.userStories.3": "PF-222: Order summary with totals, taxes, and shipping calculations",
  "projects.shopup.sprints.6.userStories.4": "PF-199: Detailed product view for buyers with specifications",
  "projects.shopup.sprints.6.userStories.5": "PF-198: Main buyer page with filtering and search capabilities",
  
  "projects.shopup.sprints.7.title": "Sprint 7 - Payment Integration & UX Improvements",
  "projects.shopup.sprints.7.duration": "3 weeks",
  "projects.shopup.sprints.7.description": "Complete MercadoPago integration with comprehensive payment processing and user experience enhancements",
  "projects.shopup.sprints.7.achievements.1": "Full MercadoPago API integration for secure payments",
  "projects.shopup.sprints.7.achievements.2": "Payment gateway implementation with webhook handling",
  "projects.shopup.sprints.7.achievements.3": "Sales consultation system for buyers and entrepreneurs",
  "projects.shopup.sprints.7.achievements.4": "Enhanced entrepreneur store view with improved UI/UX design",
  "projects.shopup.sprints.7.userStories.1": "PF-239: MercadoPago payment system refinement and optimization",
  "projects.shopup.sprints.7.userStories.2": "PF-59: Payment gateway SPIKE implementation and testing",
  "projects.shopup.sprints.7.userStories.3": "PF-244: Sales consultation functionality for buyers",
  "projects.shopup.sprints.7.userStories.4": "PF-62: Enhanced entrepreneur store view for buyer experience",
  "projects.shopup.sprints.8.title": "Sprint 8 - Sales Management & Geolocation",
  "projects.shopup.sprints.8.duration": "3 weeks",
  "projects.shopup.sprints.8.description": "Advanced sales management system with Google Maps integration for business geolocation and discovery",
  "projects.shopup.sprints.8.achievements.1": "Automatic sales registration system implementation",
  "projects.shopup.sprints.8.achievements.2": "Google Maps custom integration for business location services",
  "projects.shopup.sprints.8.achievements.3": "Business search functionality with location-based filtering",
  "projects.shopup.sprints.8.achievements.4": "Complete sales consultation views for all user roles",
  "projects.shopup.sprints.8.userStories.1": "Automatic sales registration when buyers complete purchases",
  "projects.shopup.sprints.8.userStories.2": "SPIKE: Google Maps custom implementation for business geolocation",
  "projects.shopup.sprints.8.userStories.3": "Business search functionality for buyers with location awareness",
  "projects.shopup.sprints.8.userStories.4": "Complete entrepreneur store view using Fede's design specifications",
  "projects.shopup.sprints.8.userStories.5": "Sales consultation view for entrepreneurs with analytics",
  "projects.shopup.sprints.8.userStories.6": "Sales consultation view for buyers with order history",
  "projects.shopup.sprints.8.currentFocus.1": "Google Maps API integration and custom map components",
  "projects.shopup.sprints.8.currentFocus.2": "Sales workflow automation and order processing",
  "projects.shopup.sprints.8.currentFocus.3": "Location-based business discovery algorithms",
  "projects.shopup.sprints.8.currentFocus.4": "Enhanced UI/UX for store and sales management",
  
  "sprintTimeline.defaultDescription": "Agile development with 2-week sprints",
  "sprintTimeline.currentSprint": "Currently in Sprint",
  "sprintTimeline.collapseSprints": "Collapse Sprints",
  "sprintTimeline.expandSprints": "Expand Sprints",
  "sprintTimeline.current": "CURRENT",
  "sprintTimeline.status.completed": "Completed",
  "sprintTimeline.status.inProgress": "In Progress",
  "sprintTimeline.status.planned": "Planned",
  "sprintTimeline.userStories": "User Stories",
  "sprintTimeline.technicalAchievements": "Technical Achievements",
  "sprintTimeline.currentFocus": "Current Focus",
  "sprintTimeline.progress.completed": "100% completed",
  "sprintTimeline.progress.inProgress": "In development...",
  "sprintTimeline.progress.upcoming": "Coming soon",
  "sprintTimeline.stats.title": "Development Statistics",
  "sprintTimeline.stats.sprintsCompleted": "Sprints Completed",
  "sprintTimeline.stats.inProgress": "In Progress",
  "sprintTimeline.stats.totalUserStories": "Total User Stories",
  "sprintTimeline.stats.developmentWeeks": "Development Weeks",
  
  "projects.shopup.lessonsLearned.1": "Hexagonal architecture significantly improves testability and code maintainability",
  "projects.shopup.lessonsLearned.2": "Spring Cloud Gateway is powerful but requires careful filter configuration and testing",
  "projects.shopup.lessonsLearned.3": "Database triggers are useful for synchronization but can complicate debugging workflows",
  "projects.shopup.lessonsLearned.4": "Keycloak has a steep learning curve but provides enterprise-grade authentication capabilities",
  "projects.shopup.lessonsLearned.5": "Docker Compose simplifies multi-service development and ensures environment consistency",
  "projects.shopup.lessonsLearned.6": "FastAPI with Python excels for AI-specialized microservices with async capabilities",
  "projects.shopup.lessonsLearned.7": "Bean Validation should be complemented with business logic validation in service layers",
  "projects.shopup.lessonsLearned.8": "OpenAPI/Swagger documentation is essential for team collaboration and API contracts",
  "projects.shopup.lessonsLearned.9": "Event-driven architecture patterns are crucial for maintaining data consistency across services",
  "projects.shopup.lessonsLearned.10": "JWT claim structure design directly impacts authorization implementation complexity",
  
  "projects.shopup.nextSteps.1": "Complete Sprint 8: Finalize Google Maps integration and sales management system",
  "projects.shopup.nextSteps.2": "Implement comprehensive notification system with email and push notifications",
  "projects.shopup.nextSteps.3": "Build advanced analytics dashboard with sales insights and business metrics",
  "projects.shopup.nextSteps.4": "Add Redis caching layer for performance optimization of frequent queries",
  "projects.shopup.nextSteps.5": "Implement real-time features using WebSocket for live order updates",
  "projects.shopup.nextSteps.6": "Set up CI/CD pipeline with automated testing and deployment to cloud infrastructure",
  "projects.shopup.nextSteps.7": "Add comprehensive monitoring and logging with ELK stack for production readiness",
  "projects.shopup.nextSteps.8": "Develop mobile application for enhanced buyer and entrepreneur experience",
  "projects.shopup.nextSteps.9": "Implement advanced AI recommendations for personalized product discovery",
  "projects.shopup.nextSteps.10": "Scale infrastructure for multi-region deployment and high availability",
  "projects.isidoro.title": "Isidoro S.A. ‚Äì Corporate Website",
  "projects.isidoro.description": "Responsive informational site for an agribusiness company. Style inspired by John Deere, multi-language support, and backend with email sending.",
  "projects.logistica.title": "Logistics System ‚Äì Shipment Management",
  "projects.logistica.description": "Comprehensive logistics and shipment management system developed for Ferreter√≠a Siglo21. Features complete traceability, route management, automated status updates, WhatsApp notifications, and secure authentication with Keycloak.",
  "projects.security.title": "Cybersecurity Training ‚Äì GISSIC UTN",
  "projects.security.description": "Technical repository with analyses, scripts, and solutions to offensive cybersecurity challenges and secure development. Aligned with DevSecOps practices.",
  "projects.devops.title": "DevOps Workshop ‚Äì Infrastructure & Deployment",
  "projects.devops.description": "Integrative DevOps project: CI/CD pipelines, Docker containers, AWS deployment, and IaC and Kubernetes concepts. Collaborative and automated work.",
  "projects.barberia.title": "FADE ROOM - Barbershop Management System",
  "projects.barberia.description": "Complete barbershop management system with full-stack React + Spring Boot architecture. Features smart booking, weekly scheduling, JWT authentication, service-appointment integration, and advanced admin panel.",
  
  "projects.barberia.lessonsLearned.1": "System without initial login created lack of client traceability - implementing authentication from the beginning is crucial",
  "projects.barberia.lessonsLearned.2": "Redis significantly improved cache and session performance, but we evaluate migrating to Keycloak for more robust identity management",
  "projects.barberia.lessonsLearned.3": "Hexagonal architecture with Spring Boot facilitated separation of responsibilities and business logic testing",
  "projects.barberia.lessonsLearned.4": "Weekly scheduling system with automated templates revolutionized availability management",
  "projects.barberia.lessonsLearned.5": "Integration between React frontend and Spring Boot backend requires careful state handling and real-time synchronization",
  
  "projects.barberia.nextSteps.1": "Implement interactive WhatsApp notifications to confirm appointments 24 hours before the appointment",
  "projects.barberia.nextSteps.2": "Improve homepage with before/after service gallery to showcase work results",
  "projects.barberia.nextSteps.3": "Add barber profiles with photos and detailed information for better client identification",
  "projects.barberia.nextSteps.4": "Develop multi-branch system to manage independent appointments by barber and location",
  "projects.barberia.nextSteps.5": "Evaluate migration from Redis to Keycloak for centralized authentication and authorization management",
  
  "projects.card.demo": "View Demo",
  "projects.card.code": "View Code",
  "projects.card.details": "View Details",
  "projects.card.dependencies": "Dependencies:",
  "projects.card.more": "more",
  "projects.card.commands": "Available commands:",
  "projects.card.showMore": "Show more",
  "projects.card.showLess": "Show less",
  "projects.card.clickToExpand": "Click to expand",
  "projects.card.viewFullSize": "View full size",
  "projects.modal.viewing": "Viewing:",
  "projects.modal.pressEscape": "Press ESC to close",
  "projects.status.development": "IN DEVELOPMENT",
  "projects.status.production": "IN PRODUCTION",
  "projects.status.completed": "COMPLETED", 
  "projects.status.client": "REAL CLIENT",
  "projects.status.training": "TRAINING",
  
  "contact.title": "FacuBot v2.1",
  "contact.status.online": "ONLINE",
  "contact.status.location": "C√≥rdoba, AR üá¶üá∑",
  "contact.status.response": "< 24 hours",
  "contact.status.available": "üü¢ Available", 
  "contact.methods.title": "üöÄ CONNECTION METHODS",
  "contact.methods.email": "Professional contact",
  "contact.methods.linkedin": "Professional network",
  "contact.methods.github": "View code",
  "contact.bot.greeting1": "Hello! üëã I'm FacuBot v2.1",
  "contact.bot.greeting2": "I'm here to help you contact Facundo",
  "contact.bot.greeting3": "What communication method do you prefer?",
  "contact.system.title": "üìä SYSTEM STATUS",
  "contact.system.location": "Location:",
  "contact.system.response": "Response:",
  "contact.system.status": "Status:",
  "contact.thanks": "Thanks for visiting!"
}
